@startuml

class Drone {
    - id: int
    - droneType: DroneType
    - created: ZonedDateTime
    - serialNumber: String
    - carriageWeight: int
    - carriageType: String

    + Drone(int, DroneType, String, String, int, String)
    + toString(): String
    + getId(): int
    + setId(int): void
    + getDroneType(): DroneType
    + setDroneType(DroneType): void
    + getCreated(): ZonedDateTime
    + setCreated(String): void
    + getSerialNumber(): String
    + setSerialNumber(String): void
    + getCarriageWeight(): int
    + setCarriageWeight(int): void
    + getCarriageType(): String
    + setCarriageType(String): void
}

class DroneDynamic {
    -droneId: int
    -timestamp: ZonedDateTime
    -speed: int
    -alignRoll: float
    -alignYaw: float
    -alignPitch: float
    -longitude: float
    -latitude: float
    -batteryStatus: int
    -lastSeen: ZonedDateTime
    -isActive: boolean

    +DroneDynamic(droneId: int, timestamp: String, speed: int, alignRoll: float, alignYaw: float, alignPitch: float, longitude: float, latitude: float, batteryStatus: int, lastSeen: String, isActive: boolean)
    +getDroneId(): int
    +setDroneId(droneId: int): void
    +getTimestamp(): ZonedDateTime
    +setTimestamp(timestamp: String): void
    +getSpeed(): int
    +setSpeed(speed: int): void
    +getAlignRoll(): float
    +setAlignRoll(alignRoll: float): void
    +getAlignYaw(): float
    +setAlignYaw(alignYaw: float): void
    +getAlignPitch(): float
    +setAlignPitch(alignPitch: float): void
    +getLongitude(): float
    +setLongitude(longitude: float): void
    +getLatitude(): float
    +setLatitude(latitude: float): void
    +getBatteryStatus(): int
    +setBatteryStatus(batteryStatus: int): void
    +getLastSeen(): ZonedDateTime
    +setLastSeen(lastSeen: String): void
    +getIsActive(): boolean
    +setIsActive(isActive: boolean): void
}

class DroneManager {
    - dataCategory: String
    - droneList: Drone[]
    - count: int
    + getCount(): int
    + getDroneList(): Drone[]
    - doDroneTypeIdToDroneType(droneTypeId: String): DroneType
    - doMapDrone(droneJson: JSONObject): Drone
    - doMapDrones(drones: JSONArray): void
    + initializeDrones(): void
}

class DroneDynamicManager {
    - dataCategory: String
    - index: int
    - count: int
    - currentPageIndex: int
    - previousPageExists: boolean
    - nextPageExists: boolean
    - cache: Map<Integer, DroneDynamic>

    + initialize(): void
    + doDroneIdToDrone(droneId: String): Drone
    + isFormatActive(isActiveStr: String): boolean
    + doMapDroneDynamic(droneDynJson: JSONObject): void
    + doGetDroneDynamicsPage(amount: int, pageNr: int): DroneDynamic[]
    + doLoadData(startIndex: int, amount: int): void
    + getCount(): int
}

class DroneType {
    - id: int
    - manufacturer: String
    - typeName: String
    - weight: int
    - maxSpeed: int
    - batteryCapacity: int
    - controlRange: int
    - maxCarriage: int
    + DroneType(id: int, manufacturer: String, typeName: String, weight: int, maxSpeed: int, batteryCapacity: int, controlRange: int, maxCarriage: int)
    + getId(): int
    + getManufacturer(): String
    + getTypeName(): String
    + getWeight(): int
    + getMaxSpeed(): int
    + getBatteryCapacity(): int
    + getControlRange(): int
    + getMaxCarriage(): int
    + setId(id: int): void
    + setManufacturer(manufacturer: String): void
    + setTypeName(typeName: String): void
    + setWeight(weight: int): void
    + setMaxSpeed(maxSpeed: int): void
    + setBatteryCapacity(batteryCapacity: int): void
    + setControlRange(controlRange: int): void
    + setMaxCarriage(maxCarriage: int): void
}

class ApiAdapter {
    -USER_AGENT: String
    -URL: String
    -JSON_FORMAT: String
    -limit: int
    -offset: int
    -LIMIT_STR: String
    -OFFSET_STR: String
    -TOKEN: String
    -jsonResponse: JSONObject
    -nextPageExists: boolean
    -previousPageExists: boolean
    -lastCount: int

    +fetchApi(dataCategory: String): JSONObject
    +fetchDataFromCategory(dataCategory: String, amount: int, pageNr: int): JSONArray
    +fetchDataFromCategoryPagewise(dataCategory: String, amount: int, pageNr: int): JSONArray
    +fetchDataFromCategoryOffsetwise(dataCategory: String, startIndex: int, amount: int): JSONArray
    +getLastCount(): int
    +getCountOfDataFromCategory(dataCategory: String): int
    +getNextPageExists(): boolean
    +getPreviousPageExists(): boolean
}

class DroneTableModel {
    - id: int
    - manufacturer: String
    - typeName: String
    - weight: int
    - maxSpeed: int
    - batteryCapacity: int
    - controlRange: int
    - maxCarriage: int
    + DroneTableModel(droneType: DroneType)
    + getId(): int
    + getManufacturer(): String
    + getTypeName(): String
    + getWeight(): int
    + getMaxSpeed(): int
    + getBatteryCapacity(): int
    + getControlRange(): int
    + getMaxCarriage(): int
    + doCreateTableModelList(): List<DroneTableModel>
}

class FlightDynamicsController {
    - currentPageNr: int
    - buttonNext: Button
    - buttonPrevious: Button
    - jumpButton: Button
    - currentPage: Label
    - totalPages: Label
    - dynamicsTable: TableView
    - droneIdColumn: TableColumn
    - statusColumn: TableColumn
    - timestampColumn: TableColumn
    - speedColumn: TableColumn
    - batteryColumn: TableColumn
    - longitudeColumn: TableColumn
    - latitudeColumn: TableColumn
    - lastSeenColumn: TableColumn
    - rollColumn: TableColumn
    - pitchColumn: TableColumn
    - yawColumn: TableColumn
    - pageJumper: TextField
    - wrongInput: Label
    + initialize(): void
    + doUpdateTable(): void
}

class DroneType {
    -id: int
    -manufacturer: String
    -typeName: String
    -weight: int
    -maxSpeed: int
    -batteryCapacity: int
    -controlRange: int
    -maxCarriage: int

    +DroneType(id: int, manufacturer: String, typeName: String, weight: int, maxSpeed: int, batteryCapacity: int, controlRange: int, maxCarriage: int)
    +getId(): int
    +getManufacturer(): String
    +getTypeName(): String
    +getWeight(): int
    +getMaxSpeed(): int
    +getBatteryCapacity(): int
    +getControlRange(): int
    +getMaxCarriage(): int
    +setId(id: int): void
    +setManufacturer(manufacturer: String): void
    +setTypeName(typeName: String): void
    +setWeight(weight: int): void
    +setMaxSpeed(maxSpeed: int): void
    +setBatteryCapacity(batteryCapacity: int): void
    +setControlRange(controlRange: int): void
    +setMaxCarriage(maxCarriage: int): void
}

class DashboardController {
    -buttonHistory: Button
    -buttonFlightDynamics: Button
    -buttonDrones: Button
    -refreshData: Button
    -mapView: ImageView
    -mainBody: BorderPane
    -vBoxButtonList: VBox
    -currentPage: int
    -mapNorthLat: double
    -mapSouthLat: double
    -mapEastLon: double
    -mapWestLon: double
    -droneDynamicsCount: int

    +initialize(): void
    +openDrone(DroneDynamic): void
    +openHistory(): void
    +openDroneCatalog(): void
    +openFlightDynamics(): void
    +updateData(Pane): void
}


class DroneController {
    - title: Label
    - serialNr: Label
    - model: Label
    - batteryPercentage: Label
    - manufacturer: Label
    - status: Label
    - speed: Label
    - lastSeen: Label
    - flightTime: Label
    - batteryLifeEstimation: Label
    - avgSpeed: Label
    - droneDynamic: DroneDynamic
    - drone: Drone
    - droneType: DroneType
    - currentPage: int

    + initialize(): void
    + setDroneDyn(DroneDynamic): void
    - getBatteryPercentage(int, int): String
    - getFlightTime(Drone): int
    - getBatteryLifeEstimation(): String
    - getAverageSpeed(): String
    + setCurrentPage(int): void
}

class DroneTypeManager {
    - dataCategory: String
    - droneTypeList: DroneType[]
    - count: int
    + doMapDroneType(droneTypeJson: JSONObject): DroneType
    + doMapDroneTypes(droneTypes: JSONArray): void
    + doInitializeDroneTypes(): void
    + getCount(): int
    + getDroneTypeList(): DroneType[]
}

class HistoryController {
    - currentPageNr: int
    - mapNorthLat: double
    - mapSouthLat: double
    - mapEastLon: double
    - mapWestLon: double
    - mainBody: BorderPane
    - upperBody: BorderPane
    - title: Label
    - scrollPane: ScrollPane
    - vBoxButtonList: VBox
    - mapView: ImageView
    - upperHbox: HBox
    - currentPage: Label
    - pageInput: TextField
    - changePageButton: Button
    - lowerHbox: HBox
    - firstPage: Label
    - pageSlider: Slider
    - lastPage: Label
    + initialize(): void
    + openDroneHistory(DroneDynamic): void
    - updatePage(Pane): void
}

class Main {
    +AdiZenTest(): void
    +main(args: String[]): void
    +runTest(): void
    +test(input: String): void
    +formatJson(input: String): String
}

Main <|--- ApiAdapter

DroneTypeManager <--- ApiAdapter
DashboardController --> DroneDynamicManager
DashboardController --> DroneDynamic
DroneController --> DroneDynamic

DroneDynamicManager --> ApiAdapter
DroneDynamicManager --> Drone
DroneDynamicManager --> DroneDynamic

DroneManager --> DroneType
DroneManager --> DroneTypeManager
DroneManager --> Drone
DroneManager --> ApiAdapter

DroneTableModel --> DroneType
DroneTableModel --> DroneTypeManager 

DroneTypeManager --> DroneType

FlightDynamicsController --> DroneDynamicManager
FlightDynamicsController --> DroneManager
FlightDynamicsController --> DroneDynamic

HistoryController --> DroneDynamicManager
HistoryController --> DroneManager
HistoryController --> DroneDynamic
HistoryController --> DroneController
HistoryController --> DroneDynamic

@enduml
