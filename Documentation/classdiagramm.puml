@startuml

class Drone {
    -id: int
    -droneType: int
    -created: ZonedDateTime
    -serialNumber: String
    -carriageWeight: int
    -carriageType: String

    +Drone(id: int, droneType: int, created: String, serialNumber: String, carriageWeight: int, carriageType: String)
    +getId(): int
    +setId(id: int): void
    +setDroneType(droneType: int): void
    +getCreated(): ZonedDateTime
    +setCreated(created: String): void
    +getSerialNumber(): String
    +setSerialNumber(serialNumber: String): void
    +getCarriageWeight(): int
    +setCarriageWeight(carriageWeight: int): void
    +getCarriageType(): String
    +setCarriageType(carriageType: String): void
}

class DroneDynamic {
    -droneId: int
    -timestamp: ZonedDateTime
    -speed: int
    -alignRoll: float
    -alignYaw: float
    -alignPitch: float
    -longitude: float
    -latitude: float
    -batteryStatus: int
    -lastSeen: ZonedDateTime
    -isActive: boolean

    +DroneDynamic(droneId: int, timestamp: String, speed: int, alignRoll: float, alignYaw: float, alignPitch: float, longitude: float, latitude: float, batteryStatus: int, lastSeen: String, isActive: boolean)
    +getDroneId(): int
    +setDroneId(droneId: int): void
    +getTimestamp(): ZonedDateTime
    +setTimestamp(timestamp: String): void
    +getSpeed(): int
    +setSpeed(speed: int): void
    +getAlignRoll(): float
    +setAlignRoll(alignRoll: float): void
    +getAlignYaw(): float
    +setAlignYaw(alignYaw: float): void
    +getAlignPitch(): float
    +setAlignPitch(alignPitch: float): void
    +getLongitude(): float
    +setLongitude(longitude: float): void
    +getLatitude(): float
    +setLatitude(latitude: float): void
    +getBatteryStatus(): int
    +setBatteryStatus(batteryStatus: int): void
    +getLastSeen(): ZonedDateTime
    +setLastSeen(lastSeen: String): void
    +getIsActive(): boolean
    +setIsActive(isActive: boolean): void
}

class DroneManager {
    -category: String
    -droneList: List<Drone>

    +formatDroneType(droneType: String): int
    +mapDrone(droneJson: JSONObject): Drone
    +mapDrones(drones: JSONArray): void
    +getDroneList(): List<Drone>
    +initializeDrones(): void
}

class DroneDynamicManager {
    -dataCategory: String
    -index: int
    -count: int
    -currentPageIndex: int
    -previousPageExists: boolean
    -nextPageExists: boolean
    -cache: Map<Integer, DroneDynamic>

    +initialize(): void
    +doDroneIdToDrone(droneId: String): Drone
    +isFormatActive(isActiveStr: String): boolean
    +doMapDroneDynamic(droneDynJson: JSONObject): void
    +doGetDroneDynamicsPage(amount: int, pageNr: int): DroneDynamic[]
    +doLoadData(startIndex: int, amount: int): void
    +getCount(): int
}

class DroneList {
    -droneList: List<String>

    +DroneList(droneList: List<String>)
    +initializeUI(): void
    +rundummy(): void
}

class DroneType {
    -id: int
    -manufacturer: String
    -typeName: String
    -weight: int
    -maxSpeed: int
    -batteryCapacity: int
    -controlRange: int
    -maxCarriage: int

    +DroneType(id: int, manufacturer: String, typeName: String, weight: int, maxSpeed: int, batteryCapacity: int, controlRange: int, maxCarriage: int)
    +getId(): int
    +getManufacturer(): String
    +getTypeName(): String
    +getWeight(): int
    +getMaxSpeed(): int
    +getBatteryCapacity(): int
    +getControlRange(): int
    +getMaxCarriage(): int
    +setId(id: int): void
    +setManufacturer(manufacturer: String): void
    +setTypeName(typeName: String): void
    +setWeight(weight: int): void
    +setMaxSpeed(maxSpeed: int): void
    +setBatteryCapacity(batteryCapacity: int): void
    +setControlRange(controlRange: int): void
    +setMaxCarriage(maxCarriage: int): void
}

class ApiAdapter {
    -USER_AGENT: String
    -URL: String
    -JSON_FORMAT: String
    -limit: int
    -offset: int
    -LIMIT_STR: String
    -OFFSET_STR: String
    -TOKEN: String
    -jsonResponse: JSONObject
    -nextPageExists: boolean
    -previousPageExists: boolean
    -lastCount: int

    +fetchApi(dataCategory: String): JSONObject
    +fetchDataFromCategory(dataCategory: String, amount: int, pageNr: int): JSONArray
    +fetchDataFromCategoryPagewise(dataCategory: String, amount: int, pageNr: int): JSONArray
    +fetchDataFromCategoryOffsetwise(dataCategory: String, startIndex: int, amount: int): JSONArray
    +getLastCount(): int
    +getCountOfDataFromCategory(dataCategory: String): int
    +getNextPageExists(): boolean
    +getPreviousPageExists(): boolean
}

class DroneTableModel {
    -id: int
    -manufacturer: String
    -typeName: String
    -weight: int
    -maxSpeed: int
    -batteryCapacity: int
    -controlRange: int
    -maxCarriage: int

    +DroneTableModel(droneType: DroneType)
    +getId(): int
    +getManufacturer(): String
    +getTypeName(): String
    +getWeight(): int
    +getMaxSpeed(): int
    +getBatteryCapacity(): int
    +getControlRange(): int
    +getMaxCarriage(): int
    +doCreateTableModelList(): List<DroneTableModel>
}

class FlightDynamicsController {
    -currentPageNr: int
    -jumpButton: Button
    -currentPage: Label
    -totalPages: Label
    -dynamicsTable: TableView
    -droneIdColumn: TableColumn
    -statusColumn: TableColumn
    -timestampColumn: TableColumn
    -speedColumn: TableColumn
    -batteryColumn: TableColumn
    -longitudeColumn: TableColumn
    -latitudeColumn: TableColumn
    -lastSeenColumn: TableColumn
    -rollColumn: TableColumn
    -pitchColumn: TableColumn
    -yawColumn: TableColumn
    -pageJumper: TextField
    -wrongInput: Label
    -buttonNext: Button
    -buttonPrevious: Button

    +initialize(): void
    +doUpdateTable(): void
}

class DroneType {
    -id: int
    -manufacturer: String
    -typeName: String
    -weight: int
    -maxSpeed: int
    -batteryCapacity: int
    -controlRange: int
    -maxCarriage: int

    +DroneType(id: int, manufacturer: String, typeName: String, weight: int, maxSpeed: int, batteryCapacity: int, controlRange: int, maxCarriage: int)
    +getId(): int
    +getManufacturer(): String
    +getTypeName(): String
    +getWeight(): int
    +getMaxSpeed(): int
    +getBatteryCapacity(): int
    +getControlRange(): int
    +getMaxCarriage(): int
    +setId(id: int): void
    +setManufacturer(manufacturer: String): void
    +setTypeName(typeName: String): void
    +setWeight(weight: int): void
    +setMaxSpeed(maxSpeed: int): void
    +setBatteryCapacity(batteryCapacity: int): void
    +setControlRange(controlRange: int): void
    +setMaxCarriage(maxCarriage: int): void
}

class DashboardController {
    -buttonHistory: Button
    -buttonFlightDynamics: Button
    -buttonDrones: Button
    -refreshData: Button
    -mapView: ImageView
    -mainBody: BorderPane
    -vBoxButtonList: VBox
    -currentPage: int
    -mapNorthLat: double
    -mapSouthLat: double
    -mapEastLon: double
    -mapWestLon: double
    -droneDynamicsCount: int

    +initialize(): void
    +openDrone(DroneDynamic): void
    +openHistory(): void
    +openDroneCatalog(): void
    +openFlightDynamics(): void
    +updateData(Pane): void
}

class Main {
    +AdiZenTest(): void
    +main(args: String[]): void
    +runTest(): void
    +test(input: String): void
    +formatJson(input: String): String
}

DroneManager <--- ApiAdapter
DroneManager --- Drone
DroneDynamicsManager <--- ApiAdapter
Main <|--- ApiAdapter
Drone --- DroneMapper
FlightDynamicsController --- DroneManager
DroneTypeManager --- DroneTableModel
DroneTypeManager <--- ApiAdapter
DroneTypeManager --- DroneType


@enduml
